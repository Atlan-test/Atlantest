apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namesapace: ecommerce
spec:
  replicas: 3
  selector:
    matchLabels:
      app: product-service
  strategy:
    type: RollingUpdate  # Specify the rolling update strategy
    rollingUpdate:
      maxSurge: 1         # Maximum number of new pods that can be created above the desired number of pods
      maxUnavailable: 1    # Maximum number of pods that can be unavailable during the update
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
      - name: product-service
        image: your-docker-registry/product-service:latest
        imagePullPolicy: IfNotPresent # here we can use IfNotPresent, Always, Never
        imagePullSecrets:
        - name: my_registry_secret # Name of the secret created for the private registry
        ports:
        - containerPort: 3002
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        # Liveness Probe
        livenessProbe:
          httpGet:
            path: /healthz         # Endpoint to check if the app is alive
            port: 80
          initialDelaySeconds: 10   # Wait for 30 seconds before starting to probe
          failureThreshold: 3   # consider it as failure after 3 attempts
          timeoutSeconds: 20    # After 20 sec request will timedout
          periodSeconds: 10          # Check every 10 seconds
        # Readiness Probe
        readinessProbe:
          httpGet:
            path: /Ready        # Endpoint to check if the app is ready to serve traffic
            port: 80
          initialDelaySeconds: 10   # Wait for 30 seconds before starting to probe
          failureThreshold: 3   # consider it as failure after 3 attempts
          timeoutSeconds: 20    # After 20 sec request will timedout
          periodSeconds: 10          # Check every 10 seconds
        volumeMounts:
        - name: Products-pv
          mountPath: /usr/src/app/data # Path where data will be stored

      volumes:
      - name: Products-pv
        persistentVolumeClaim:
          claimName: product-data-pvc # Reference to the PVC created for storage

